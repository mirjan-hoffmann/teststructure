name: Publish documents
on: [push]

env:
  OUTPUT_FILENAME: "document"

jobs:
  merge-documents:
    runs-on: ubuntu-latest
    container:
      image: pandoc/latex:3.1.1
    steps:
      - uses: actions/checkout@v3
      - run: |
          test -f config.yml && echo -e '$if(content-files)$input-files:\n$for(content-files)$  - $content-files$\n$endfor$$endif$' > .template-defaults.plain
          test -f config.yml && echo "" | pandoc -t plain --metadata-file config.yml --template .template-defaults.plain > .defaults.yml
          test -s .defaults.yml && pandoc -f markdown -t markdown -s -o merged-document.md --file-scope --defaults .defaults.yml
          test -s .defaults.yml || pandoc -f markdown -t markdown -s -o merged-document.md --file-scope `ls -1 *.md | grep -v -e README.md | tr '\n' ' '`
#      - run: pandoc -f markdown -t markdown -s -o merged-document.md --file-scope `cat structure | tr '\n' ' '`
      - uses: actions/upload-artifact@v3
        with:
          name: merged-data
          path: ${{ github.workspace }}
          retention-days: 1

  prepare-pandoc:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/tibhannover/oer/course-pandoc-preparation/add-possibility-to-generate-landing-page
    needs: merge-documents
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: merged-data
      - run: /build/pandoc-preparation.sh merged-document
      - uses: actions/upload-artifact@v3
        with:
          name: prepared-data
          path: ${{ github.workspace }}
          retention-days: 1

  build-documents:
    runs-on: ubuntu-latest
    container:
      image: pandoc/latex:3.1.1
    needs: prepare-pandoc
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: prepared-data
      - run: |
          ls -l
          chmod +x pandoc-generate.sh
          ./pandoc-generate.sh
          rm pandoc-generate.sh
          mkdir .public
          cp -r * .public
          mv .public public
      - uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # Deployment job
  deploy:
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-documents
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
